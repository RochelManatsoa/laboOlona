security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

        client1_user_provider:
            entity:
                class: App\WhiteLabel\Entity\Client1\User
                property: email
                manager_name: client1

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern: ^/api/login
            stateless: true
            provider: app_user_provider
            json_login:
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern: ^/api
            stateless: true
            provider: app_user_provider
            jwt: ~

        ### üîê FIREWALL ADMIN MARQUE BLANCHE
        admin_white_label:
            pattern: ^/wl-admin
            host: ^(client\d+|boa)(\.olona-talents\.local\.com|\.olona-talents\.com|\-talents\.com)(:\d+)?$
            provider: client1_user_provider
            custom_authenticator: App\Security\WhiteLabel\AdminWhiteLabelAuthenticator
            entry_point: App\Security\WhiteLabel\AdminWhiteLabelAuthenticator
            logout:
                path: wl_admin_logout
                target: wl_admin_login
            lazy: true

        ### üîê FIREWALL ADMIN PRINCIPAL
        admin_main:
            pattern: ^/admin
            host: ^(127\.0\.0\.1|localhost|dev\.olona-talents\.com|olona-talents\.com)(:\d+)?$
            provider: app_user_provider
            custom_authenticator: App\Security\Admin\AdminLoginAuthenticator
            entry_point: App\Security\Admin\AdminLoginAuthenticator
            logout:
                path: admin_logout
                target: admin_login
            lazy: true

        ### üîê FIREWALL CLIENT1 WEB
        client1:
            pattern: ^/
            host: ^client1\.olona-talents\.(local\.com|com)$
            provider: client1_user_provider
            custom_authenticator: App\Security\Client1\Client1Authenticator
            logout:
                path: app_client1_logout
                target: app_client1_login
            lazy: true

        ### üîê FIREWALL GENERAL (SITE GLOBAL)
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator:
                - App\Security\AppAuthenticator
                - App\Security\GoogleAuthenticator
                - App\Security\FacebookAuthenticator
            logout:
                path: app_logout
                target: app_login
                invalidate_session: true
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /
                always_remember_me: false

    access_control:
        # Admin principal
        - { path: ^/admin/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/logout$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin, roles: ROLE_ADMIN }

        # Admin marque blanche
        - { path: ^/wl-admin/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/wl-admin/logout$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/wl-admin, host: ^(client1|boa)\.olona-talents\.(local\.com|com)$, roles: ROLE_ADMIN }

        # Public access
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }

        # Client1 & autres
        - { path: ^/referrer, host: ^client1\.olona-talents\.(local\.com|com)$, roles: ROLE_USER }
        - { path: ^/recruiter, host: ^client1\.olona-talents\.(local\.com|com)$, roles: ROLE_USER }
        - { path: ^/moderateur, roles: ROLE_USER }
        - { path: ^/profile/, roles: ROLE_USER }
        - { path: ^/dashboard/, roles: ROLE_USER }
        - { path: ^/v2/candidate, roles: ROLE_USER }
        - { path: ^/v2/recruiter, roles: ROLE_USER }
        - { path: ^/v2/staff, roles: ROLE_USER }
        - { path: ^/v2/dashboard, roles: ROLE_USER }
        - { path: ^/finance, roles: ROLE_FINANCE }
        - { path: ^/employes-hub, roles: ROLE_EMPLOYE }
        - { path: ^/youtube/playlist, roles: ROLE_USER }
        - { path: ^/tableau-de-bord/, roles: ROLE_USER }

    role_hierarchy:
        ROLE_FINANCE: [ROLE_CANDIDAT]
        ROLE_COOPTEUR: [ROLE_CANDIDAT]
        ROLE_EMPLOYE: [ROLE_CANDIDAT]
        ROLE_MODERATEUR: []
        ROLE_ENTREPRISE: [] 
        ROLE_ADMIN_BLOG: [ROLE_USER] 
        ROLE_COWORKING: [ROLE_USER]
        ROLE_ADMIN: [ROLE_ADMIN_BLOG, ROLE_ENTREPRISE, ROLE_MODERATEUR, ROLE_COWORKING]
